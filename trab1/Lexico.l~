%{
#define OP	050
#define CP	051
#define INT	101
#define LETRA	102
#define IDENT	111
#define DECTIPO 112
#define STRING	200
#define FUNC	300
#define EXP	400
#define OPMAT	601
#define OPRELAC	602
#define RESERV	700
#define COMMENT	800
#define COMMENT2	850
#define EOL	901
#define ERROR	999999
#define WHITESPACES 123
int linha = 1;
int done = 0;
%}

%%

[\n]*	{linha++;}

[ \t]*	{return WHITESPACES;}

"("	{ return OP; }
")"	{ return CP; }
                            
\"([^\n"\\]|\\["\\])*\" { return STRING; }

[0-9] {return INT;}

\>|\<|\>=|\<=|\<>|and|or|not {return OPRELAC;}

[a-z]+[a-z0-9]* {return IDENT;}

%(LETRA)((LETRA)|(INT))* {return IDENT;}

([a-z]*|[0-9]*)([+|-|*|/|=])([a-z]|[0-9])* {return EXP;} 

("["[0-9]*"]")+(int|string|bool|char|char) {return DECTIPO;}

(;|if|else|end|while|loop|return|new|true|false) {return RESERV;}

[+|-|*|/|=]	{return OPMAT;}

"/*"([^*]|\*+[^*/])*\*+"/" {return COMMENT;}



([ \t\n]*)	{ }

.           { return ERROR; }

%%

yywrap() {
	done = 1;
}

int main() {
	while (!done) {
		printf("%d\n", yylex());
		printf("%s -> linha %d \n", yytext,linha);
		
	}
	return 0;
}

